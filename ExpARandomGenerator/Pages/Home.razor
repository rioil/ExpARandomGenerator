@page "/"

<PageTitle>Home</PageTitle>

<div class="text-left">
    <div class="mb-2">
        <button class="btn btn-primary" @onclick="RegenerateData">Regenerate</button>
    </div>
    <div class="mb-2">
        <label>
            <InputCheckbox @bind-Value="IsBitIndicatorEnabled" />
            Bit Indicator
        </label>
    </div>

    <div class="table-responsive">
        <table class="table table-hover w-auto text-center">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">0</th>
                    <th scope="col">1</th>
                    <th scope="col">2</th>
                    <th scope="col">3</th>
                    <th scope="col">4</th>
                    <th scope="col">5</th>
                    <th scope="col">6</th>
                    <th scope="col">7</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Data.Count; i++)
                {
                    var digits = Data[i];
                    <tr>
                        <th scope="col" class="align-middle">Data@(i + 1)</th>
                        @foreach (var digit in digits)
                        {
                            <td>
                                <div class="digit">
                                    <div class="digit-num">@digit.ToString("X1")</div>
                                    <div class="digit-bits @(IsBitIndicatorEnabled ? string.Empty : "hidden")">
                                        @foreach (var bit in Convert.ToString(digit, 2).PadLeft(4, '0'))
                                        {
                                            <svg width="16" height="16">
                                                <circle cx="8" cy="8" r="7"
                                                        fill="@(bit == '1' ? "green" : "lightgray")" />
                                            </svg>
                                        }
                                    </div>
                                </div>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private readonly byte[] _numbers = Enumerable.Range(0, 16).Select(x => (byte)x).ToArray();

    public IList<IList<byte>> Data { get; set; } = Array.Empty<byte[]>();

    public bool IsBitIndicatorEnabled { get; set; } = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        RegenerateData();
    }

    private void RegenerateData()
    {
        Data = new byte[][] { GenerateRandomData(), GenerateRandomData() };
    }

    private byte[] GenerateRandomData()
    {
        const int Digits = 8;
        var data = _numbers.OrderBy(x => Random.Shared.Next())
                           .Take(Digits)
                           .ToArray();
        return data;
    }
}